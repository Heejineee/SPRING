<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 
		1. 사용자 정의 클래스 등록 : 패키지 단위
		2. AOP => 반복 코딩 제거(등록)
		3. DataSource 설정
		4. DataSource => 트랜잭션 등록
		5. SqlSessionFactoryBean 설정
		6. WebSocket
		7. 보안 설정
	 -->
	<context:component-scan base-package="com.sist.di2"/>
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@211.238.142.199:1521:XE"
		p:username="hr"
		p:password="happy"
	/>
	<!-- 
			스프링 = 클래스를 관리
				생성 => 필요한 데이터 첨부(DI) => 소멸
								1) 일반 데이터(setter, constructor)
								2) 클래스 자체를 첨부(@Autowired : 생성된 클래스 객체의 주소)
				===
				1) XML로 생성
					<bean id="" class="">
				2) Annotation으로 생성
					<context:component-scan base-package="패키지명">
					스프링에 의해 생성되는 클래스
							= 클래스 위에 Annotation을 사용
							@Component, @Repository, @Controller, @RestController, @Service
					프로그래머가 직접 생성하는 클래스(VO, interface)
					=> DI
						= @Autowired : 스프링에서 자동으로 첨부 (단점 : 원하는 클래스 지정할 수 없다)
						= @Resource : 스프링에 저장되어 있는 객체중에 지정해서 가지고 온다 (얘는 지정 가능)
						==> @Autowired, @Resouce(name="b")를 사용하기 위해 반드시 스프링에서 메모리 할당을 해야 사용할 수 있다
	
	 -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:databaseIdProvider-ref="ds"
		p:configLocation="classpath:Config.xml"		
	/>
</beans>
